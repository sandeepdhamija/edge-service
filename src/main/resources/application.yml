server:
  port: 9000
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
  shutdown: graceful

spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: edge-service
            client-secret: polar-keycloak-secret
            scope: openid
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/PolarBookshop
  application:
    name: edge-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  session:
    store-type: redis
    timeout: 10m
    redis:
      namespace: polar:edge
  data:
    redis:
    host: localhost
    port: 6379
    timeout: 2000
    connect-timeout: 2000
  cloud:
    gateway:
      server:
        webflux:
          httpclient:
            connect-timeout: 2000
            response-timeout: 5000
            pool:
              type: elastic
              max-life-time: 30s
              max-idle-time: 15s
          default-filters:
            - SaveSession
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY, GATEWAY_TIMEOUT, INTERNAL_SERVER_ERROR
                backoff:
                  firstBackoff: 1s
                  maxBackoff: 5s
                  factor: 2
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 10
                redis-rate-limiter.burst-capacity: 20
                redis-rate-limiter.requested-tokens: 1
          routes:
            - id: catalog-route
              uri: ${CATALOG_SERVICE_URL:http://localhost:9001}/books
              predicates:
                - Path=/books/**
              filters:
                - name: CircuitBreaker
                  args:
                    name: catalogCircuitBreaker
                    fallbackUri: forward:/catalog-fallback
            - id: order-route
              uri: ${ORDER_SERVICE_URL:http://localhost:9002}/orders
              predicates:
                - Path=/orders/**
              filters:
                - name: CircuitBreaker
                  args:
                    name: orderCircuitBreaker
resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 20
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 15000
  timelimiter:
    configs:
      default:
        timeoutDuration: 5s
logging:
  level:
    io.github.resilience4j: DEBUG
